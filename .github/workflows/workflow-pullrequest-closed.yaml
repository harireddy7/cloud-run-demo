# Pull Request - Clean up closed PR's image and cloud run service
name: Pull Request Closed

on:
  pull_request:
    branches:
      - main
    types: [closed]

env:
  REGION: asia-south1
  LOCATION: asia-south1-docker.pkg.dev
  IMAGE: asia-south1-docker.pkg.dev/cloud-run-preview-demo/cloud-run-repo/preview
  SERVICE: preview
  BRANCH_NAME: ""

jobs:
  build-preview-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Log github context
      run: echo $JSON
      env:
        JSON: ${{ toJSON(github) }}

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GAR_JSON_KEY }}

    - name: Install google cloud sdk
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: '456.0.0'

    - name: Get closed PR branch name
      id: parse-branch-name
      run: echo "BRANCH_NAME=$(echo ${{ github.head_ref }} | sed 's|^[^/]*/[^/]*/*||' | sed 's/\//-/g' | sed 's/.*/\L&/g' | tr -d '[:space:]')" >> $GITHUB_ENV

    - name: Delete cloud run service
      if: env.BRANCH_NAME != ''
      run: |
        SERVICE=$(gcloud run services list --region $REGION --format="value(metadata.name)" --filter="metadata.name ~ $BRANCH_NAME")
        if [ ! -z $SERVICE ]; then
          gcloud run services delete $SERVICE --region $REGION --quiet
        else
          echo "Cloud run service $SERVICE - cloud run service not found"
        fi

    - name: Delete preview docker images of closed PR branch
      if: env.BRANCH_NAME != ''
      run: |
        TAGS=$(gcloud artifacts docker tags list $IMAGE --format="value(tag)" --filter="tag ~ $BRANCH_NAME")
        for tag in $TAGS; do
          gcloud artifacts docker images delete $IMAGE:$tag --quiet
        done

    - name: Verify cloud run service and preview image of branch are deleted
      if: env.BRANCH_NAME != ''
      run: |
        gcloud run services list --region $REGION --filter="metadata.name ~ $BRANCH_NAME"
        gcloud artifacts docker tags list $IMAGE --filter="tag ~ $BRANCH_NAME"
