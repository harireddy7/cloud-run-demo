# Build, Publish and deploy to Cloud Run when a pull request is raised against main branch
name: Pull Request

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

env:
  REGION: asia-south1
  LOCATION: asia-south1-docker.pkg.dev
  IMAGE: asia-south1-docker.pkg.dev/cloud-run-preview-demo/cloud-run-repo/preview
  SERVICE: preview
  DEPLOYMENT_URL: ""

jobs:
  build-preview-deploy:
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Log github context
      run: echo $JSON
      env:
        JSON: ${{ toJSON(github) }}

    - name: Install YQ/JQ
      run: |
        YQ=4.16.1
        curl -sL https://github.com/mikefarah/yq/releases/download/v${YQ}/yq_linux_amd64 -o /usr/local/bin/yq && chmod +x /usr/local/bin/yq

    - name: Authenticate to GCP
      id: gcp-auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GAR_JSON_KEY }}

    - name: Install google cloud sdk
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: '456.0.0'

    - name: Parse current branch name
      id: parse-branch-name
      run: |
        echo "BRANCH_NAME=$(echo ${{ github.head_ref }} | sed 's|^[^/]*/[^/]*/*||' | sed 's/\//-/g' | sed 's/.*/\L&/g' | tr -d '[:space:]')" >> $GITHUB_ENV
        echo "COMMIT_SHA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV

    - name: Get docker preview image name
      id: get-docker-image
      run: echo "IMAGE_PATH=$IMAGE:$BRANCH_NAME-$COMMIT_SHA" >> $GITHUB_ENV

    - name: Build and Push Preview Image to GAR
      id: build-and-publish
      run: |
        gcloud auth configure-docker $LOCATION
        docker build -t $IMAGE_PATH ./
        docker push $IMAGE_PATH

    - name: Deploy to Cloud Run
      id: deploy
      run: |
        OUTPUT=gcloud-deploy-output.log
        gcloud run deploy $SERVICE-$BRANCH_NAME --image $IMAGE_PATH --region $REGION --allow-unauthenticated --update-labels managed-by=github-actions --format="flattened(status.url, status.traffic[0].url)" > $OUTPUT
        cat $OUTPUT
        echo "DEPLOYMENT_URL=$(yq eval '.url' $OUTPUT)" >> $GITHUB_ENV

    - name: Comment Deployed URL
      uses: mshick/add-pr-comment@v2
      with:
        message: Changes are deployed to preview environment - ${{ env.DEPLOYMENT_URL }}
