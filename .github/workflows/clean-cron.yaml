name: Clean up open PRs

on:
  workflow_dispatch:
    inputs:
      force_cleanup:
        description: 'Force cleanup of preview environments'
        required: false
        default: 'false'

env:
  REGION: asia-south1
  LOCATION: asia-south1-docker.pkg.dev
  IMAGE_PATH: asia-south1-docker.pkg.dev/cloud-run-preview-demo/cloud-run-repo/preview-demo
  SERVICE: preview-demo
  BASE_VERSION: 1.0.0

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GAR_JSON_KEY }}

      - name: Install google cloud sdk
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '456.0.0'

      - name: Find Open PRs with Preview Label
        id: extract-open-prs
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            const prLastUpdatedLimit = 5 * 60 * 1000; // 2 hours
            const devOpenPRBranches = pullRequests.filter(pr => {
              const lastUpdatedAt = +(new Date(pr.updated_at));
              return pr.base.ref === 'main' && Date.now() - lastUpdatedAt > prLastUpdatedLimit;
            }).map(pr => pr.head.ref.split('/').slice(2)[0] || pr.head.ref);
            return devOpenPRBranches;

      - name: Delete cloud run services of long opened PR branches
        run: |
          branches=$(jq '.[]' <<< "$BRANCHES")
          echo "$BRANCHES"
          echo "$branches"
          for branch in $branches; do
            SERVICE=$(gcloud run services list --region ${{ env.REGION }} --format="value(metadata.name)" --filter="metadata.name ~ $branch")
            echo "$SERVICE"
            echo "Service for $branch is $SERVICE"
            # if [ ! -z $SERVICE ]; then
            #   echo "cloud run service $SERVICE for $branch found"
            #   echo "gcloud run services delete $SERVICE --region ${{ env.REGION }} --quiet"
            # else
            #   echo "cloud run service $SERVICE for $branch not found"
            # fi
          done
        env:
          BRANCHES: ${{ steps.extract-open-prs.outputs.result }}

      - name: Delete preview docker images
        run: |
          branches=$(jq '.[]' <<< "$BRANCHES")
          for branch in $branches; do
            TAGS=$(gcloud artifacts docker tags list ${{ env.IMAGE_PATH }} --format="value(tag)" --filter="tag ~ $branch")
            echo "tags for $branch are $TAGS"
            # for tag in $TAGS; do
            #   echo "gcloud artifacts docker images delete ${{ env.IMAGE_PATH }}:$tag"
            # done
          done
        env:
          BRANCHES: ${{ steps.extract-open-prs.outputs.result }}
