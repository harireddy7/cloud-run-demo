name: Build and Deploy PR Preview to Cloud Run

on:
  pull_request:
    branches:
      - main

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  GAR_JSON_KEY: ${{ secrets.GAR_JSON_KEY }}
  SERVICE: preview-demo
  IMAGE: preview-demo-pr

jobs:
  build-publish-deploy-preview:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:

      # 1. Checkout

      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2 Get PR branch name and latest short commit hash

      - name: Parse current branch name
        id: parse-branch-name
        run: echo "branch=$(echo ${{ github.head_ref }} | sed 's/\//-/g' | tr -d '[:space:]')" >> $GITHUB_OUTPUT

      - name: Parse commit hash
        id: parse-commit-hash
        run: echo "commit_sha=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})" >> $GITHUB_OUTPUT
      
      # 3. Authenticate to GCP
        
      - name: Authenticate to GCP
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.GAR_JSON_KEY }}

      # 4. Authenticate Docker to Google Cloud Artifact Registry (GAR)

      - name: Login to Google Artifact Registry (GAR)
        id: docker-gar-auth
        run: |
          cat ${{ steps.gcp-auth.outputs.credentials_file_path }} | docker login -u _json_key --password-stdin ${{ env.GAR_LOCATION }}-docker.pkg.dev


      - name: Get docker preview image name
        id: get-docker-image
        run: |
          image_name="preview-demo-pr-${{ steps.parse-branch-name.outputs.branch }}:${{ github.run_number }}"
          echo "image_name=$image_name" >> $GITHUB_OUTPUT
          echo "image_path=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE }}/$image_name" >> $GITHUB_OUTPUT
          
      # 6. Build Docker Preview Image and Publish to GAR

      - name: Build and Push Preview Image to GAR
        id: build-and-publish
        run: |
          docker build -t ${{ steps.get-docker-image.outputs.image_path }} ./
          docker push ${{ steps.get-docker-image.outputs.image_path }}

      # 7. Deploy the Image with Cloud Run

      - name: Deploy Preview to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: preview-demo-pr-${{ steps.parse-branch-name.outputs.branch }}
          region: ${{ env.GAR_LOCATION }}
          image: ${{ steps.get-docker-image.outputs.image_path }}
          flags: '--allow-unauthenticated'

      # 6. Log the Cloud Run url output

      - name: Preview URL
        run: echo ${{ steps.deploy.outputs.url }}
