# Release - Build and publish release image and Deploy to Cloud Run.
name: Release to dev

on:
  push:
    branches:
    - dev

env:
  REGION: asia-south1
  LOCATION: asia-south1-docker.pkg.dev
  IMAGE: asia-south1-docker.pkg.dev/cloud-run-preview-demo/cloud-run-repo/release
  SERVICE: release
  NEXT_RELEASE: ""

jobs:
  build-publish-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Use Node.js 21.2
      uses: actions/setup-node@v3
      with:
        node-version: '21.2'

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GAR_JSON_KEY }}

    - name: Install google cloud sdk
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: '456.0.0'

    - name: Log GitHub context
      run: echo $JSON
      env:
        JSON: ${{ toJSON(github) }}

    - name: Install packages
      run: yarn add -D semantic-release @semantic-release/git

    - name: Dry run Semantic release to get next version
      run: |
        GH_TOKEN=${{secrets.GITHUB_TOKEN}} npx semantic-release --dry-run --verbose > release-temp.log
        cat release-temp.log
        echo "NEXT_RELEASE=$(cat release-temp.log | grep -oiP 'the next release version is \K.*')" >> $GITHUB_ENV

    - name: Get docker release image name & path
      id: get-docker-image
      if: ${{ env.NEXT_RELEASE != '' }}
      run: |
        echo "Next release version is v$NEXT_RELEASE"
        echo "IMAGE_PATH=$IMAGE:$NEXT_RELEASE" >> $GITHUB_ENV

    - name: Build and Push Preview Image to GAR
      id: build-and-publish
      if: ${{ env.NEXT_RELEASE != '' }}
      run: |
        gcloud auth configure-docker $LOCATION
        docker build -t $IMAGE_PATH --build-arg VERSION=$NEXT_RELEASE ./
        docker push $IMAGE_PATH

    - name: Release to GitHub
      id: release-to-github
      if: ${{ env.NEXT_RELEASE != '' }}
      run: |
        GH_TOKEN=${{secrets.GITHUB_TOKEN}} npx semantic-release

    - name: Deploy to Cloud Run
      id: deploy
      if: ${{ env.NEXT_RELEASE != '' }}
      run: |
        OUTPUT=gcloud-deploy-output.log
        gcloud run deploy $SERVICE \
          --image $IMAGE_PATH \
          --region $REGION \
          --allow-unauthenticated \
          --update-labels managed-by=github-actions \
          --format="flattened(status.url, status.traffic[0].url)" > $OUTPUT
        cat $OUTPUT
